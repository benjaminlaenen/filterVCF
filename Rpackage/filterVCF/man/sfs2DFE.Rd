% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/filterVCF_vif_functions.R
\name{sfs2DFE}
\alias{sfs2DFE}
\title{Create a formated input site frequency spectrum for different programs}
\usage{
sfs2DFE(sfs_sel, sfs_neut, name = "VIF", Dn = 0, LDn = 0, Ds = 0,
  NDs = 0, folded = FALSE, downsampled = FALSE,
  output = c("DFE-alpha", "polyDFE", "dadi", "fastsimcoal2"))
}
\arguments{
\item{sfs_sel}{a list for selected sites obtained using getSFS_VIF()}

\item{sfs_neut}{a list for neutral sites obtained using getSFS_VIF()}

\item{name}{The names to print as comment in the input}

\item{Dn}{= 0 number of selected divergent sites (not mandatory if the SFSs are lists obtained using getSFS_VIF())}

\item{LDn}{= 0 total number of selected divergence sites (not mandatory if the SFSs are lists obtained using getSFS_VIF())}

\item{Ds}{= 0 number of neutral divergent sites (not mandatory if the SFSs are lists obtained using getSFS_VIF())}

\item{NDs}{= 0 total number of neutral divergence sites (not mandatory if the SFSs are lists obtained using getSFS_VIF())}

\item{folded}{= FALSE should the SFS be folded or not. Note that the folding is not perfomed here, just the folded SFS is retrieved from the list.}

\item{downsampled}{= FALSE should the SFS be downsampled or not. Note that the downsampling is not perfomed here, just the downsampled SFS is retrieved from the list.}

\item{output}{= c("DFE-alpha", "polyDFE", "dadi", "fastsimcoal2") Type of output [only DFE-alpha and polyDFE are currently supported]}
}
\value{
A character vector with the formated SFS input
}
\description{
Only DFE-alplha and polyDFE are supported for the moment
}
\examples{

#get synonymous non synonymous sites
syn <- bed2Grange("4fold.bed")
nonsyn <- bed2Grange("0fold.bed")

#intersect with the VIF
vif_syn <- intersect_vif_Grange(vif, syn)
vif_nonsyn <- intersect_vif_Grange(vif, nonsyn)

#repolarize, note that the repolKey must be created before on the vif
#and will be inherited when we intersect with syn and nonsyn
vif <- repolarize_vif(vif, methods = "ML")
vif_syn <- repolarize_vif(vif_syn, methods = "ML")
vif_nonsyn <- repolarize_vif(vif_nonsyn, methods = "ML")

#get the SFSs
sfs_syn    <- getSFS_VIF(vif_syn,  , divergence = TRUE, use_repol = TRUE, remove_polym_from_div = TRUE)
sfs_nonsyn <- getSFS_VIF(vif_nonsyn, divergence = TRUE, use_repol = TRUE, remove_polym_from_div = TRUE)
#get input for DFE-alpha
VIF_out <- sfs2DFE(sfs_nonsyn, sfs_syn, name = "input_gene_set1", folded = FALSE, downsampled = FALSE, output = "DFE-alpha")


}
\references{
put references to the literature/web site here
}
\author{
~~Benjamin Laenen~~
}
\keyword{sfs}
