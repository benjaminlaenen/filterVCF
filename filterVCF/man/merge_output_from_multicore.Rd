% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/filter_VCF_utilities.R
\name{merge_output_from_multicore}
\alias{merge_output_from_multicore}
\title{Merge non overlapping filterVCF object}
\usage{
merge_output_from_multicore(output_multicore, drop_raw_vcf = FALSE)
}
\arguments{
\item{output_multicore}{list of filterVCF object}

\item{drop_raw_vcf}{=FALSE Keep only the first sample in the original vcf}
}
\value{
A merged filterVCF object
}
\description{
For computing efficency, a filterVCF can be splitted by
chromosome or chunked into lots of piece to run in parallel.
This function merge the chunk together. If a chunk missed a slot
or is empty and empty slot is merged. The user must ensure that the
size of the final vcf, invariant,... equals the sums of the chunked 
vcf, invariant. All the slots will be merged except the refrence and 
the opt, which are inherited from the first element of the input.
}
\details{
Note that filterVCF object can become quite large in memory when there
is many samples sequenced. The option drop_raw_vcf keep only the first
sample of the original vcf to free space while maitining the number of
sites correct in the original vcf. It means that the original vcf cannot
be recreated from a merged object when using drop_raw_vcf=TRUE but the
filtered vcf can be outputed with all the fields.
}
\examples{



#out is a list from multiple run of filterVCF.R or multiple chromosomes
filtervcf <- merge_output_from_multicore(out, drop_raw_vcf = TRUE)
}
\references{

}
\author{
~~Benjamin Laenen~~
}
\keyword{~utilities}
