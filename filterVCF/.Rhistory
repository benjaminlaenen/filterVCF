library(filterVCF)
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
library(filterVCF)
library(filterVCF)
library(filterVCF)
library(filterVCF)
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
library(filterVCF)
library(filterVCF)
library(filterVCF)
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
DFE()
library(filterVCF)
DFE()
new("DFE")
DFE <- function(){
new("DFE")
}
DFE()
library(filterVCF)
DFE()
library(filterVCF)
DFE()
roxygen2::roxygenise()
library(filterVCF)
DFE()
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
str(DFE())
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
parse_opt_sample
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
roxygen2::roxygenise()
library(filterVCF)
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
devtools::load_all(".")
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
roxygen2::roxygenise()
library(filterVCF)
fixed()
fixed(dfe)
roxygen2::roxygenise()
args(getGeneric("as.list"))
getGeneric("as.list")
showMethods("as.list")
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
textbox("This function will first try mclapply using multicore. Sometimes it fails without a warnings and return NULL. For the failed run, it will try to run it one signle core using lapply and report a warnings. If lapply fail the code break and an error is thrown.")
cat(textbox("This function will first try mclapply using multicore. Sometimes it fails without a warnings and return NULL. For the failed run, it will try to run it one signle core using lapply and report a warnings. If lapply fail the code break and an error is thrown."))
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
install.packages("roxygen2")
library((roxygen2))
library(roxygen2)
roxygen2::roxygenise()
roxygen2::roxygenise()
BiocManager::install("GenomicRanges")
BiocManager::install("rtracklayer")
BiocManager::install("BSgenome")
BiocManager::install("HelloRanges")
roxygen2::roxygenise()
library(GenomicRanges)
BiocManager::install("GenomeInfoDb")
library(GenomicRanges)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
warnings()
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
vcfR()
new("vcfR")
list_vcf <- list(
vcf = new("vcfR"),
vcf_filtered = new("vcfR"),
vcf_inv = GRanges(),
vcf_inv_filtered = GRanges(),
)
list_vcf <- list(
vcf = new("vcfR"),
vcf_filtered = new("vcfR"),
vcf_inv = GRanges(),
vcf_inv_filtered = GRanges()
)
as.filterVCF(list_vcf)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
roxygen2::roxygenise()
library(filterVCF)
install.packages(3qpe)
install.packages("ape")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install(c("GenomicFeatures", "AnnotationDbi"))
install.packages("XML")
install.packages("geiger")
install.packages("XML")
install.packages( 'ffbase', 'R2HTML', 'vcfR', 'R.utils', 'optparse', 'BSgenome',
'HelloRanges', 'mgsub', 'memuse')
install.packages( c('ffbase', 'R2HTML', 'vcfR', 'R.utils', 'optparse', 'BSgenome',
'HelloRanges', 'mgsub', 'memuse'))
BiocManager::install(c("BSgenome", "HelloRanges"))
library(ff)
library(filterVCF)
BiocManager::install(c("BSgenome", "IRanges"))
library(GenomicRanges)
install.packages("RCurl")
BiocManager::install(c("GenomeInfoDb"))
library(GenomicRanges)
library(Biostrings)
library(ffbase)
library(R2HTML)
library(parallel)
library(vcfR)
library(rtracklayer)
library("XML")
install.packages("XML")
library("XML")
library(rtracklayer)
library(utils)
library(optparse)
library(rtracklayer)
lapply(list=list("GenomicRanges", "Biostrings", "ffbase", "R2HTML", "parallel", "vcfR", "rtracklayer", "R.utils", "optparse", "BSgenome", "HelloRanges", "mgsub", "memuse", "snow"), library)
lapply(list=list("GenomicRanges", "Biostrings", "ffbase", "R2HTML", "parallel", "vcfR", "rtracklayer", "R.utils", "optparse", "BSgenome", "HelloRanges", "mgsub", "memuse", "snow"), FUN=library)
lapply(list=as.list(c("GenomicRanges", "Biostrings", "ffbase", "R2HTML", "parallel", "vcfR", "rtracklayer", "R.utils", "optparse", "BSgenome", "HelloRanges", "mgsub", "memuse", "snow")), FUN=library)
as.list(c("GenomicRanges", "Biostrings", "ffbase", "R2HTML", "parallel", "vcfR", "rtracklayer", "R.utils", "optparse", "BSgenome", "HelloRanges", "mgsub", "memuse", "snow"))
lapply(as.list(c("GenomicRanges", "Biostrings", "ffbase", "R2HTML", "parallel", "vcfR", "rtracklayer", "R.utils", "optparse", "BSgenome", "HelloRanges", "mgsub", "memuse", "snow")), FUN=library)
lapply(list(c("GenomicRanges", "Biostrings", "ffbase", "R2HTML", "parallel", "vcfR", "rtracklayer", "R.utils", "optparse", "BSgenome", "HelloRanges", "mgsub", "memuse", "snow")), FUN=library)
lapply((c("GenomicRanges", "Biostrings", "ffbase", "R2HTML", "parallel", "vcfR", "rtracklayer", "R.utils", "optparse", "BSgenome", "HelloRanges", "mgsub", "memuse", "snow")), FUN=library)
sapply((c("GenomicRanges", "Biostrings", "ffbase", "R2HTML", "parallel", "vcfR", "rtracklayer", "R.utils", "optparse", "BSgenome", "HelloRanges", "mgsub", "memuse", "snow")), FUN=library)
sapply((list("GenomicRanges", "Biostrings", "ffbase", "R2HTML", "parallel", "vcfR", "rtracklayer", "R.utils", "optparse", "BSgenome", "HelloRanges", "mgsub", "memuse", "snow")), FUN=library)
sapply((list("GenomicRanges", "Biostrings", "ffbase", "R2HTML", "parallel", "vcfR", "rtracklayer", "R.utils", "optparse", "BSgenome", "HelloRanges", "mgsub", "memuse", "snow")), function(x) library(x))
setwd("/Users/Benjamin/Dropbox/Script/genomic_scripts/Rpackage/filterVCF/tests")
library(filterVCF)
library(filterVCF)
?filterVCF
filterVCF
filterVCF()
check_case("AATBV")
check_case("AATBc")
VIF()
DFE()
VIF()
